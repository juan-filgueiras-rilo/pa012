<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>es.udc.paproject</groupId>
	<artifactId>pa-project-backend</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>PA Project Backend</name>
	<description>PA Project Backend</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.2.RELEASE</version>
	</parent>

	<properties>

		<!-- Data source properties -->
		<dataSource.user>pa</dataSource.user>
		<dataSource.password>pa</dataSource.password>
		<testDataSource.user>${dataSource.user}</testDataSource.user>
		<testDataSource.password>${dataSource.password}</testDataSource.password>

		<!-- Compiler options -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<!-- Package versions -->
		<jjwt.version>0.9.0</jjwt.version>

		<!-- Plugin versions -->
		<sqlPlugin.version>1.5</sqlPlugin.version>

	</properties>

	<profiles>
		<profile>
			<id>mysql</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- JDBC driver properties -->
				<jdbcDriver.groupId>mysql</jdbcDriver.groupId>
				<jdbcDriver.artifactId>mysql-connector-java</jdbcDriver.artifactId>
				<jdbcDriver.version>8.0.11</jdbcDriver.version>
				<jdbcDriver.className>com.mysql.cj.jdbc.Driver</jdbcDriver.className>

				<!-- Data source properties -->
				<dataSource.baseUrl>jdbc:mysql://localhost/paproject</dataSource.baseUrl>
				<dataSource.url>${dataSource.baseUrl}?useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=Europe/Madrid</dataSource.url>
				<testDataSource.url>${dataSource.baseUrl}test?useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=Europe/Madrid</testDataSource.url>
				<dataSource.createTablesScript>1-MySQLCreateTables.sql</dataSource.createTablesScript>
				<dataSource.createDataScript>2-MySQLCreateData.sql</dataSource.createDataScript>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-batch</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${jdbcDriver.groupId}</groupId>
			<artifactId>${jdbcDriver.artifactId}</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-all -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.pholser</groupId>
			<artifactId>junit-quickcheck-core</artifactId>
			<version>0.9</version>
		</dependency>
		<dependency>
    <groupId>com.pholser</groupId>
    <artifactId>junit-quickcheck-generators</artifactId>
    <version>0.7</version>
</dependency>
		<!-- https://mvnrepository.com/artifact/org.jacoco/-maven-plugin -->
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.5</version>
		</dependency>

	</dependencies>

	<build>

		<!-- When using spring-boot-starter-parent, files under "src/main/resources" 
			are automatically filtered and "@propertyName@" notation is used instead 
			of "${propertyName}". -->

		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- - Configuration specifies onError="continue" since SQL scripts try 
				to drop tables before creating them (which causes errors if such tables do 
				not exist yet). - Configuration specifies autocommit="true" since some drivers 
				(e.g the PostgreSQL JDBC 2 driver) do not commit changes if some error ocurrs. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>${sqlPlugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>${jdbcDriver.groupId}</groupId>
						<artifactId>${jdbcDriver.artifactId}</artifactId>
						<version>${jdbcDriver.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>${jdbcDriver.className}</driver>
					<url>${dataSource.url}</url>
					<username>${dataSource.user}</username>
					<password>${dataSource.password}</password>
					<autocommit>true</autocommit>
					<onError>continue</onError>
					<orderFile>ascending</orderFile>
					<fileset>
						<basedir>${basedir}</basedir>
						<includes>
							<include>
								src/sql/${dataSource.createTablesScript}
							</include>
							<include>
								src/sql/${dataSource.createDataScript}
							</include>
						</includes>
					</fileset>
				</configuration>
				<executions>
					<execution>
						<id>create-tables-for-testing</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<driver>${jdbcDriver.className}</driver>
							<url>${testDataSource.url}</url>
							<username>${testDataSource.user}</username>
							<password>${testDataSource.password}</password>
							<autocommit>true</autocommit>
							<onError>continue</onError>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<include>
										src/sql/${dataSource.createTablesScript}
									</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
							<configuration>
					<excludes>
						<exclude>**/es/udc/paproject/backend/rest/dtos/*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- attached to Maven test phase -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>

				</executions>
				
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!-- This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>sql-maven-plugin</artifactId>
										<versionRange>${sqlPlugin.version}</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>[0.5,)</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>
